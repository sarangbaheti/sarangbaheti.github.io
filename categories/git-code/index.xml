<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git Code on a few notes</title>
    <link>https://www.variadic.xyz/categories/git-code/</link>
    <description>Recent content in Git Code on a few notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 May 2015 12:29:54 +0000</lastBuildDate>
    
	<atom:link href="https://www.variadic.xyz/categories/git-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>notes on git</title>
      <link>https://www.variadic.xyz/2015/05/16/notes-on-git/</link>
      <pubDate>Sat, 16 May 2015 12:29:54 +0000</pubDate>
      
      <guid>https://www.variadic.xyz/2015/05/16/notes-on-git/</guid>
      <description>&lt;p&gt;Now that I moved my blog to &lt;a href=&#34;https://www.variadic.xyz/&#34;&gt;github-pages&lt;/a&gt; generated by &lt;a href=&#34;http://octopress.org/&#34;&gt;octopress&lt;/a&gt;, using git is the only way to make progress. Rather than digressing about my experiences @migrating from wordpress to octopress- I would rather keep this post as my notes on &lt;code&gt;git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;getting started&lt;/h2&gt;

&lt;p&gt;I find it interesting to learn by jumping-in rather than reading tons of volumes first. To get started you need to let git know that you are going to be setting a repository, this needs to happen in a particular directory- which contains stuff you want to manage.
The command is:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git init .
Initialized empty Git repository in /home/sarangb/learn-git/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once an empty git repo is initialized now the next step is to add some content for git to track. Lets start by adding a a script that fetches weather information (just for fun). Once I have the script the next step is to let git know about it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add *.sh
git commit -m &#39;initial commit&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will add all &lt;code&gt;sh&lt;/code&gt; files to git, this is two step process:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git add&lt;/code&gt; will add the files to a staging area, more on that shortly&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit&lt;/code&gt; will commit files in git repo&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that scripts have been added. Say you need to tweak the script and recommit the changes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add *.sh
git commit -m &amp;quot;tweaked scripts&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>